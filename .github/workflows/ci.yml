name: CI

description: Continuous Integration Workflow for QSleeperFantasyBot

permissions:
  contents: write

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  release:
    types: [published]
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.12"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Prepare UV Environment
        uses: ./.github/actions/prepare-uv-environment
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          dependency-groups: "lint"
      - name: Run Lint
        uses: ./.github/actions/run-lint

  typecheck:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Prepare UV Environment
        uses: ./.github/actions/prepare-uv-environment
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          dependency-groups: "typecheck"
      - name: Run Type Check
        uses: ./.github/actions/run-typecheck

  test:
    needs: typecheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Prepare UV Environment
        uses: ./.github/actions/prepare-uv-environment
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          dependency-groups: "test"
      - name: Run Tests
        uses: ./.github/actions/run-tests

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Prepare UV Environment
        uses: ./.github/actions/prepare-uv-environment
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Run Build
        uses: ./.github/actions/run-build

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Prepare UV Environment
        uses: ./.github/actions/prepare-uv-environment
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Bump Patch and Tag
        uses: ./.github/actions/bump-patch-and-tag
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          dry-run: ${{ github.event_name == 'pull_request' }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
